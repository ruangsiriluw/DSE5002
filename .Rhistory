us_df2 <- subset(project1_df, company_location == "US")
us_df2$salary_in_usd <- as.numeric(us_df2$salary_in_usd)
us_df2$work_year <- as.Date(us_df2$work_year, "%Y")
str(us_df2_subset)
us_df2 <- subset(project1_df, company_location == "US")
us_df2$salary_in_usd <- as.numeric(us_df2$salary_in_usd)
View(us_df2)
View(us_df2_subset)
us_df2$work_year <- as.Date(us_df2$work_year, "%Y")
View(us_df2_subset)
rm(us_df2_subset)
us_df2_subset <- us_df2[, relevant_columns]
View(us_df2_subset)
View(us_df2)
rm(us_df2)
srmus_df2_subset)
rm(us_df2_subset)
testus <- subset(project1_df, company_location == "US")
testus$salary_in_usd <- as.numeric(testus$salary_in_usd)
testus$work_year <- format(testus$work_year, "%Y")
str(us_df2_subset)
str(testus)
typeof(testus$work_year)
relevant_columns <- c("salary_in_usd", "work_year")
test <- testus[, relevant_columns]
View(test)
View(test)
infl <- test %>%
adjust_for_inflation(
price = test$salary_in_usd,
from_date = testt$work_year,
to_date = 2023,
country = 'US'
)
# Adjust for inflation
infl <- test %>%
adjust_for_inflation(
price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US'
)
infl <- adjust_for_inflation(price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US'
)
# Adjust for inflation
infl <- adjust_for_inflation(price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US',
extrapolate_future_method = TRUE
)
# Adjust for inflation
infl <- adjust_for_inflation(price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US',
extrapolate_future = TRUE
)
# Adjust for inflation
infl <- adjust_for_inflation(price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US',
extrapolate_future_method = 'average'
)
# Adjust for inflation
infl <- adjust_for_inflation(price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US',
extrapolate_future_method = 'average',
future_averaging_period = 'all'
)
infl <-
adjust_for_inflation(price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US',
extrapolate_future_method = 'average',
future_averaging_period = 'all',
countries_dataframe = countries_dataframe,
inflation_dataframe = inflation_dataframe
)
test$infl_adj <- infl
View(test)
infl <-
adjust_for_inflation(price = test$salary_in_usd,
from_date = test$work_year,
to_date = 2023,
country = 'US',
extrapolate_future_method = 'rate',
countries_dataframe = countries_dataframe,
inflation_dataframe = inflation_dataframe
)
##//////////////////////////////////////////////////////////////////////////
##############  Plot with country = Too busy  REMOVE DO NOT USE
rm(salary_3ctn)
##//////////////////////////////////////////////////////////////////////////
##############  Plot with country = Too busy  REMOVE DO NOT USE
rm(salary_3ctn_iqr)
##//////////////////////////////////////////////////////////////////////////
##############  Plot with country = Too busy  REMOVE DO NOT USE
rm(salary_3ctn_iqr_gt)
##//////////////////////////////////////////////////////////////////////////
##############  Plot with country = Too busy  REMOVE DO NOT USE
rm(salary_ctn_amer_iqr)
##//////////////////////////////////////////////////////////////////////////
##############  Plot with country = Too busy  REMOVE DO NOT USE
rm(salary_ctn_as_iqr)
##//////////////////////////////////////////////////////////////////////////
##############  Plot with country = Too busy  REMOVE DO NOT USE
rm(salary_ctn_eu_iqr)
salary_ctn %>%
ggplot() +
geom_bar(aes(x=continent, fill = experience_level)) +
labs(title = 'Distribution of position by experience level from companies
located within each continent',
x = 'Continent', y = 'Number of position', fill = 'Experience Level') +
theme(plot.title = element_text(hjust = 0.5),
legend.text = element_text(size = 8),
legend.position = 'right') +
scale_fill_discrete(labels = c('Entry-level', 'Mid-level', 'Senior-level'
, 'Executive-level')) +
scale_fill_manual(
name = 'Experience Level',
values = wes_palette("Moonrise2", 4),
labels = c('Entry-level', 'Mid-level', 'Senior-level', 'Executive-level')
)
library(ggplot2)
library(dplyr)
library(lubridate)
project1_df <- read.csv("Project1/r project data.csv")
####### Checking data, change some col into factor to reorder values and plot
salary_df <- project1_df %>%
mutate_at(vars('company_location', 'work_year', 'experience_level', 'company_size')
, as.factor) %>%
mutate(experience_level = factor(experience_level, levels = c('EN', 'MI', 'SE', 'EX')),
company_size = factor(company_size, levels = c('S', 'M', 'L')))
salary_df$salary_in_usd <- as.numeric(salary_df$salary_in_usd)
salary_df$work_year <- format(salary_df$work_year, "%Y")
salary_df$work_year <- format(salary_df$work_year, "%Y")
salary_df$work_year <- format(salary_df$work_year, "%Y")
salary_df
str(salary_df)
typeof(salary_df$work_year)
salary_df$work_year <- as.Date(salary_df$work_year, "%Y")
View(salary_df)
salary_df$work_year <- as.Date(salary_df$work_year, "%Y") %>%
format(salary_df$work_year, "%Y")
salary_df$work_year <- format(salary_df$work_year, "%Y")
typeof(salary_df$work_year)
salary_df$work_year <- format(salary_df$work_year, "%Y")
View(salary_df)
salary_df$salary_in_usd <- as.numeric(salary_df$salary_in_usd)
typeof(salary_df$work_year)
salary_df$work_year <- as.Date(salary_df$work_year, "%Y")
typeof(salary_df$work_year)
salary_df$work_year <- as.Date(salary_df$work_year, "-01-01")
typeof(salary_df$work_year)
salary_df$work_year <- format(salary_df$work_year, "%Y")
typeof(salary_df$work_year)
rm(salary_df)
View(project1_df)
library(ggplot2)
library(dplyr)
library(lubridate)
project1_df <- read.csv("Project1/r project data.csv")
####### Checking data, change some col into factor to reorder values and plot
salary_df <- project1_df %>%
mutate_at(vars('company_location', 'work_year', 'experience_level', 'company_size')
, as.factor) %>%
mutate(experience_level = factor(experience_level, levels = c('EN', 'MI', 'SE', 'EX')),
company_size = factor(company_size, levels = c('S', 'M', 'L')))
salary_ft_df <- salary_df %>%
subset(salary_df, employment_type == "FT",
select = -c('salary', 'salary_currency'))
salary_ft_df <- salary_df %>%
subset(salary_df, employment_type == "FT",
select = -'salary',
-'salary_currency')
salary_ft_df <- salary_df %>%
subset(salary_df, employment_type == "FT",
select(-'salary'),
select(-'salary_currency'))
salary_ft_df <- salary_df %>%
subset(salary_df, employment_type == "FT",
select(-'salary', -'salary_currency'))
salary_ft_df <- salary_df %>%
subset(salary_df, employment_type == "FT",
select(-salary, -salary_currency))
salary_ft_df <- salary_df %>%
subset(salary_df, employment_type == "FT")
salary_ft_df <- subset(salary_df, employment_type == "FT",
!salary, !salary_currency)
View(salary_df)
salary_ft_df <- subset(salary_df, employment_type == "FT")
salary_ft_df <- select(-salary, -salary_currency)
salary_ft_df <- subset(!salary, !salary_currency)
salary_ft_df <- subset(!salary)
salary_ft_df <- subset(-salary)
salary_ft_df <- select(salary_df, -c('salary', 'salary_currency'))
View(salary_ft_df)
salary_ft_df <- subset(salary_df, employment_type == "FT")
salary_ft_df <- select(salary_ft_df, -c('salary', 'salary_currency'))
salary_ft_df <- subset(salary_df, employment_type == "FT") %>%
select(salary_ft_df, -c('salary', 'salary_currency'))
library(countrycode)
company_loc <- data.frame(company_location = unique(project1_df$company_location))
company_loc <- company_loc %>%
mutate(
continent = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'continent'),
country_name = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'country.name')
)
View(company_loc)
test <- salary_ft_df %>%
left_join(company_loc, by = 'company_location')
summary(test)
company_loc <- data.frame(company_location = unique(salary_ft_df$company_location))
company_loc <- company_loc %>%
mutate(
continent = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'continent'),
country_name = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'country.name')
)
empl_res <- data.frame(company_location = unique(salary_ft_df$company_location))
empl_res <- empl_res %>%
mutate(
continent = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'continent'),
country_name = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'country.name')
)
View(empl_res)
View(company_loc)
View(empl_res)
View(company_loc)
test <- test %>%
left_join(company_loc, by = 'employee_residence')
test2 <- test %>%
left_join(company_loc, by = 'employee_residence')
empl_res <- data.frame(employee_residence = unique(salary_ft_df$employee_residence))
View(empl_res)
View(company_loc)
empl_res <- empl_res %>%
mutate(
continent = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'continent'),
country_name = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'country.name')
)
test2 <- test %>%
left_join(empl_res, by = 'employee_residence')
test <- salary_ft_df %>%
left_join(company_loc, by = 'company_location')
empl_res <- data.frame(employee_residence = unique(salary_ft_df$employee_residence))
empl_res <- empl_res %>%
mutate(
country_name = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'residence.country')
)
View(company_loc)
empl_res <- data.frame(employee_residence = unique(salary_ft_df$employee_residence))
empl_res <- empl_res %>%
mutate(
empl_country = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'country.name')
)
test2 <- test %>%
left_join(empl_res, by = 'employee_residence')
View(test2)
####  REORDER empl_country column:
test3 <- test2[, c(13, 1:12)]
rm(test3)
####  REORDER empl_country column:
test3 <- test2[, c(1:7, 13, 8:12)]
View(test3)
salary_ft_df <- salary_ft_df %>%
left_join(company_loc, by = 'company_location')
empl_res <- data.frame(employee_residence = unique(salary_ft_df$employee_residence))
empl_res <- empl_res %>%
mutate(
empl_country = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'country.name')
)
salary_ft_df <- salary_ft_df %>%
left_join(empl_res, by = 'employee_residence')
####  REORDER empl_country column:
salary_ft_df <- salary_ft_df[, c(1:7, 13, 8:12)]
##############################################################################
##############################################################################
rm(test)
##############################################################################
##############################################################################
rm(test2)
##############################################################################
##############################################################################
rm(test3)
test <- salary_ft_df %>%
group_by(employee_residence, experience_level) %>%
summarise(iqr = IQR(salary_in_usd),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
View(test)
test <- salary_ft_df %>%
group_by(employee_residence) %>%
summarise(iqr = IQR(salary_in_usd),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n()) %>%
tidyr::unnest_wider(quantiles) %>%
rename(q1 = '25%', median = '50%', q3 = '75%')
test <- salary_ft_df %>%
group_by(employee_residence) %>%
summarise(iqr = IQR(salary_in_usd),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
test <- salary_ft_df %>%
group_by(employee_residence) %>%
summarise(quantiles = quantile(salary_in_usd),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
test <- salary_ft_df %>%
group_by(employee_residence) %>%
summarise(q25 = quantile(salary_in_usd, 0.25),
median = quantile(salary_in_usd, 0.5),
q75 = quantile(salary_in_usd, 0.75),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
test <- salary_ft_df %>%
group_by(empl_country) %>%
summarise(q25 = quantile(salary_in_usd, 0.25),
median = quantile(salary_in_usd, 0.5),
q75 = quantile(salary_in_usd, 0.75),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
salary_us_res <- select(salary_ft_df, employee_residence == "US")
salary_us_res <- select(salary_ft_df, 'employee_residence' == "US")
salary_us_res <- subset(salary_ft_df, employee_residence == "US")
salary_nonus_res <- subset(salary_ft_df, employee_residence != "US")
View(salary_nonus_res)
View(salary_us_res)
View(salary_nonus_res)
View(salary_us_res)
View(salary_nonus_res)
empl_res <- data.frame(employee_residence = unique(salary_ft_df$employee_residence))
empl_res <- empl_res %>%
mutate(
empl_continent = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'continent'),
empl_country = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'country.name')
)
salary_ft_df <- salary_ft_df %>%
left_join(empl_res, by = 'employee_residence')
salary_ft_df <- salary_ft_df[, c(1:7, 13, 14, 8:12)]
salary_ft_df <- salary_ft_df %>%
left_join(empl_res, by = 'employee_residence')
salary_ft_df <- subset(salary_df, employment_type == "FT")
salary_ft_df <- select(salary_ft_df, -c('salary', 'salary_currency'))
library(countrycode)
company_loc <- data.frame(company_location = unique(salary_ft_df$company_location))
company_loc <- company_loc %>%
mutate(
continent = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'continent'),
country_name = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'country.name')
)
salary_ft_df <- salary_ft_df %>%
left_join(company_loc, by = 'company_location')
company_loc <- data.frame(company_location = unique(salary_ft_df$company_location))
View(company_loc)
company_loc <- company_loc %>%
mutate(
comp_country = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'continent'),
comp_continent = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'country.name')
)
salary_ft_df <- salary_ft_df %>%
left_join(company_loc, by = 'company_location')
empl_res <- data.frame(employee_residence = unique(salary_ft_df$employee_residence))
empl_res <- empl_res %>%
mutate(
empl_continent = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'continent'),
empl_country = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'country.name')
salary_ft_df <- salary_ft_df %>%
salary_ft_df <- salary_ft_df %>%
left_join(empl_res, by = 'employee_residence')
salary_ft_df <- salary_ft_df %>%
left_join(empl_res, by = 'employee_residence')
rm(salary_ft_df)
salary_ft_df <- subset(salary_df, employment_type == "FT")
salary_ft_df <- select(salary_ft_df, -c('salary', 'salary_currency'))
library(countrycode)
company_loc <- data.frame(company_location = unique(salary_ft_df$company_location))
company_loc <- company_loc %>%
mutate(
comp_country = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'continent'),
comp_continent = countrycode(sourcevar = company_location, origin = 'iso2c',
destination = 'country.name')
)
salary_ft_df <- salary_ft_df %>%
left_join(company_loc, by = 'company_location')
empl_res <- data.frame(employee_residence = unique(salary_ft_df$employee_residence))
empl_res <- empl_res %>%
mutate(
empl_continent = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'continent'),
empl_country = countrycode(sourcevar = employee_residence, origin = 'iso2c',
destination = 'country.name')
)
salary_ft_df <- salary_ft_df %>%
left_join(empl_res, by = 'employee_residence')
####  REORDER empl_country column:
salary_ft_df <- salary_ft_df[, c(1:7, 14, 13, 8:9, 11,12, 10)]
salary_us_res <- subset(salary_ft_df, employee_residence == "US")
salary_nonus_res <- subset(salary_ft_df, employee_residence != "US")
test <- salary_ft_df %>%
group_by(empl_country) %>%
summarise(q25 = quantile(salary_in_usd, 0.25),
median = quantile(salary_in_usd, 0.5),
q75 = quantile(salary_in_usd, 0.75),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
View(test)
test <- salary_us_res %>%
group_by(experience_level) %>%
summarise(q25 = quantile(salary_in_usd, 0.25),
median = quantile(salary_in_usd, 0.5),
q75 = quantile(salary_in_usd, 0.75),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
View(test)
salary_us_res_stat <- salary_us_res %>%
group_by(experience_level) %>%
summarise(q25 = quantile(salary_in_usd, 0.25),
median = quantile(salary_in_usd, 0.5),
q75 = quantile(salary_in_usd, 0.75),
min_salary = min(salary_in_usd),
max_salary = max(salary_in_usd),
n = n())
rm(test)
View(salary_us_res_stat)
library(gt)
salary_us_res_stat_gt <- gt(salary_us_res_stat) %>%
fmt_currency(columns = 2:6, currency = 'USD')%>%
tab_header(title = "Salary range (USD) of US residence roles by experience level") %>%
cols_label(
experience_level = 'Experience Level',
q1 = 'Q1',
median = 'Median',
q3 = 'Q3',
min_salary = 'Minimum',
max_salary = 'Maximum'
) %>%
tab_footnote(
footnote = "EN: Entry-level, MI: Mid-level, SE: Senior-level, EX: Executive-level/Director",
locations = cells_column_labels(columns = 'experience_level')
)
library(gt)
salary_us_res_stat_gt <- gt(salary_us_res_stat) %>%
fmt_currency(columns = 2:6, currency = 'USD')%>%
tab_header(title = "Salary range (USD) of US residence roles by experience level") %>%
cols_label(
experience_level = 'Experience Level',
q25 = 'Q1 25%',
median = 'Median',
q75 = 'Q3 75%',
min_salary = 'Minimum',
max_salary = 'Maximum'
) %>%
tab_footnote(
footnote = "EN: Entry-level, MI: Mid-level, SE: Senior-level, EX: Executive-level/Director",
locations = cells_column_labels(columns = 'experience_level')
)
salary_us_res_stat_gt
library(gt)
salary_us_res_stat_gt <- gt(salary_us_res_stat) %>%
fmt_currency(columns = 2:6, currency = 'USD')%>%
tab_header(title = "Salary range (USD) of all US employee residence by experience level") %>%
cols_label(
experience_level = 'Experience Level',
q25 = 'Q1 25%',
median = 'Median',
q75 = 'Q3 75%',
min_salary = 'Minimum',
max_salary = 'Maximum'
) %>%
tab_footnote(
footnote = "EN: Entry-level, MI: Mid-level, SE: Senior-level, EX: Executive-level/Director",
locations = cells_column_labels(columns = 'experience_level')
)
salary_us_res_stat_gt
gtsave(salary_us_res_stat_gt, "salary_us_res_stat_gt.png")
gtsave(salary_us_res_stat_gt, "salary_us_res_stat_gt.png")
