theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
print(count_by_age)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
print(count_by_age)
# Count of all diagnosis by age grp
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
print(count_by_age)
#### Load viridis color palettes
library(viridis)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
project_df <- read.csv("Week_3/Project1/r project data.csv")
project_df$company_location <- factor(project_df$company_location)
project_df$job_title <- factor(project_df$job_title)
project_df$work_year <- factor(project_df$work_year)
str(project_df)
View(project_df)
project_df <- read.csv("Week_3/Project1/r project data.csv")
View(project_df)
project_df$company_location <- factor(project_df$company_location)
project_df$job_title <- factor(project_df$job_title)
project_df$work_year <- factor(project_df$work_year)
project_df$company_location
project_df$job_title)
project_df$job_title)
str(work_year)
str(project_df$work_year)
qplot(work_year, salary_in_usd, project_df)
library(stringr)
library(lubridate)
library(forcats)
library(dplyr)
library(ggplot2)
qplot(work_year, salary_in_usd, project_df)
ggplot(project_df)+
geom_line(aes(work_year, salary_in_usd, color = experience_level))
ggplot(project_df)+
geom_line(aes(work_year, salary_in_usd, group = experience_level))
ggplot(project_df)+
geom_line(aes(work_year, salary_in_usd, color = experience_level))
ggplot(project_df)+
geom_bar(aes(work_year, salary_in_usd, color = experience_level))
ggplot(project_df)+
geom_bar(aes(salary_in_usd, color = experience_level))
ggplot(project_df)+
geom_boxplot(aes(salary_in_usd, color = experience_level))
ggplot(project_df)+
geom_boxplot(aes(work_year, salary_in_usd, color = experience_level))
str(project_df$job_title)
job_title_all <- project_df$job_title
summary(job_title_all)
qplot(job_title, project_df)
qplot(x = job_title, data = project_df)
qplot(x = experience_level, data = project_df)
test <- subset(project_df, project_df$job_title %in% 'Scientist')
head(test)
View(test)
test <- grepl(project_df$job_title %in% 'Scien', ignore.case = TRUE)
test <- project_df[grepl(project_df$job_title %in% 'Scien', ignore.case = TRUE), ]
test <- project_df[grepl'Scien', project_df$job_title, ignore.case = TRUE), ]
test <- project_df[grepl('Scien', project_df$job_title, ignore.case = TRUE), ]
head(test)
View(test)
test <- factor(test$job_title)
test <- project_df[grepl('Scien', project_df$job_title, ignore.case = TRUE), ]
test$job_title <- factor(test$job_title)
summary(test$job_title)
remove(job_title_all)
###### sub-setting df for US-based company only into another df
us_location_df <- subset(project_df, company_location == "US")
summary (us_location_df)
qplot(x = experience_level, data = us_location_df)
#####  Filter only data sceintist related job titles
datasci_all_df <- project_df[grepl('Scien', project_df$job_title, ignore.case = TRUE), ]
remove(test)
project_df$job_title <- factor(project_df$job_title)s
#####  Filter only data sceintist related job title
project_df$job_title <- factor(project_df$job_title)
datasci_all_df <- project_df[grepl('Scien', project_df$job_title, ignore.case = TRUE), ]
us_location_df <- subset(datasci_all_df, company_location == "US")
summary (us_location_df)
us_location_df$job_title
us_location_df$job_title <- factor(USArrests$job_title)
us_location_df$job_title <- factor(USArrests$job_title)
str(us_location_df)
datasci_all_df <- project_df[grepl('Scien', project_df$job_title, ignore.case = TRUE), ]
datasci_all_df <- project_df[grep('Scien', project_df$job_title, ignore.case = TRUE), ]
library(stringr)
library(lubridate)
library(dplyr)
library(ggplot2)
project_df <- read.csv("Week_3/Project1/r project data.csv")
project_df$company_location <- factor(project_df$company_location)
project_df$job_title <- factor(project_df$job_title)
datasci_all_df <- project_df[grep('Scien', project_df$job_title, ignore.case = TRUE), ]
datasci_all_df
summary(datasci_all_df$job_title)
View(datasci_all_df)
library(dplyr)
library(tidyr)
library(ggplot2)
data(who)
data(population)
who <- who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = c('diagnostic', 'gender', 'age'),
names_pattern = "new_?(.*)_(.)(.*)",
values_to = 'count'
)
tail(who)
who <- who %>%
left_join(population, by= c('country', 'year'))
who <- separate(who, col=age, into = c('min_age', 'max_age'),
sep = "(?<=\\d)(?=\\d{2}$)", remove = TRUE,
convert = FALSE, fill = "warn")
tail(who, n=10)
ggplot(who) +
geom_col(aes(x=gender,y = count, fill=diagnostic)) +
labs(x='Gender',
y='Count (millions)',
title='Number of TB events found per diagnostic by gender') +
scale_fill_discrete(name = 'Diagnostic: ',
labels = c('extrapulmonary', 'relapse',
'negative pulmonary smear', 'positive pulmonary smear')) +
scale_y_continuous(labels = unit_format(unit = 'M', scale = 1e-6)) +
facet_grid(.~diagnostic) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 9))
library(scale s)
library(scales)
ggplot(who) +
geom_col(aes(x=gender,y = count, fill=diagnostic)) +
labs(x='Gender',
y='Count (millions)',
title='Number of TB events found per diagnostic by gender') +
scale_fill_discrete(name = 'Diagnostic: ',
labels = c('extrapulmonary', 'relapse',
'negative pulmonary smear', 'positive pulmonary smear')) +
scale_y_continuous(labels = unit_format(unit = 'M', scale = 1e-6)) +
facet_grid(.~diagnostic) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 9))
filter_df <- who
filter_df <- filter(filter_df, population !=is.na(population), count !=is.na(count))
print(filter_df)
pct_df <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(ratio_pop = sum(count / population)) %>%
mutate(pct_pop_format = percent(ratio_pop, scale = 100, accuracy = 0.001))
print(pct_df)
summary_counts <- who %>%
group_by(diagnostic, gender) %>%
summarise(events = sum(count, na.rm = TRUE)
)
print(summary_counts)
print(summary_counts)
print(test)
test <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(events = sum(count))
print(test)
test <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(events = sum(count), total = sum(events))
print(test)
test <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(events = sum(count), total = sum(population))
print(test)
mutate(pct = events/total)
print(pct_df)
pct_df <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(ratio_pop = sum(count / population)) %>%
mutate(pct_pop_format = percent(ratio_pop, scale = 100, accuracy = 0.001))
print(pct_df)
View(test)
test <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(total = sum(population))
View(who)
View(population)
test <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(event = sum(count), total = sum(population))
print(test)
View(population)
View(population)
View(filter_df)
write.csv(population, 'test_pop.csv')
View(filter_df)
write.csv(filter_df, 'test_pop2.csv')
filter_df <- filter_df %>%
unite(col = 'age_range', 'min_age':'max_age', sep ='-')
tail(filter_df)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
print(count_by_age)
head(count_by_age)
View(count_by_age)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
head(count_by_age)
library(viridis)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
data(who)
data(population)
who <- who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = c('diagnostic', 'gender', 'age'),
names_pattern = "new_?(.*)_(.)(.*)",
values_to = 'count'
)
tail(who)
who <- who %>%
left_join(population, by= c('country', 'year'))
who <- separate(who, col=age, into = c('min_age', 'max_age'),
sep = "(?<=\\d)(?=\\d{2}$)", remove = TRUE,
convert = FALSE, fill = "warn")
tail(who, n=10)
#Note that, the 'looking forward' syntax in exercise 3 already put 65+ age
#in the min_age column, and max as NA.
#Below only mutate to replace max_age from NA to Inf
who <- who %>%
mutate_at(8, ~replace_na(., 'Inf'))
tail(who, n=10)
summary_counts <- who %>%
group_by(diagnostic, gender) %>%
summarise(events = sum(count, na.rm = TRUE)
)
print(summary_counts)
library(scales)
ggplot(who) +
geom_col(aes(x=gender,y = count, fill=diagnostic)) +
labs(x='Gender',
y='Count (millions)',
title='Number of TB events found per diagnostic by gender') +
scale_fill_discrete(name = 'Diagnostic: ',
labels = c('extrapulmonary', 'relapse',
'negative pulmonary smear', 'positive pulmonary smear')) +
scale_y_continuous(labels = unit_format(unit = 'M', scale = 1e-6)) +
facet_grid(.~diagnostic) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 9))
# remove NA row, give answer in %
#First, remove NA rows for count and population in a new df called "filter_df"
filter_df <- who
filter_df <- filter(filter_df, population !=is.na(population), count !=is.na(count))
print(filter_df)
pct_df <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(ratio_pop = sum(count / population)) %>%
mutate(pct_pop_format = percent(ratio_pop, scale = 100, accuracy = 0.001))
print(pct_df)
ggplot(pct_df) +
geom_line(aes(x = year, y = ratio_pop, group = gender, color = gender)) +
labs(x='Year',
y='Percent Population',
title='Percent of population per diagnostic through time') +
scale_y_continuous(labels = label_percent()) +
facet_grid(rows = vars(diagnostic), scales = "free_y") +
theme(plot.title = element_text(hjust=0.5))
## Notice the graph of 'rel' diagnostic group has only 1 data point,
# so, there is no line on the graph.  Free Y scale for easily visualized.
filter_df <- filter_df %>%
unite(col = 'age_range', 'min_age':'max_age', sep ='-')
tail(filter_df)
# Count of all diagnosis by age grp
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
head(count_by_age)
#### Load viridis color palettes
library(viridis)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
tail(count_by_age)
# Install and load the dplyr package if you haven't already
# install.packages("dplyr")
library(dplyr)
# Create a sample data frame
df <- data.frame(
ID = 1:5,
Value = c(10, 15, 8, 12, 7)
)
# Mutate the Value column to change the value at index 3 to 20
df <- df %>%
mutate(Value = ifelse(ID == 3, 20, Value))
# Print the modified data frame
print(df)
df <- data.frame(
ID = 1:5,
Value = c(10, 15, 8, 12, 7)
print(df)
df
df <- data.frame(
ID = 1:5,
Value = c(10, 15, 8, 12, 7)
)
df
df <- df %>%
mutate(Value = ifelse(ID == 3, 20, Value))
df
count_by_age <- count_by_age %>%
mutate(age_range = '65-Inf', '65+')
tail(count_by_age)
tail(count_by_age)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
tail(count_by_age)
count_by_age <- count_by_age %>%
head(count_by_age)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
head(count_by_age)
tail(count_by_age)
count_by_age <- count_by_age %>%
mutate(age_range = ifelse(age_range == '65-Inf', '65+'))
count_by_age <- count_by_age %>%
mutate(age_range = ifelse(age_range == '65-Inf', '65+', ))
count_by_age$age_range <- factor(count_by_age$age_range)
count_by_age$age_range
str(count_by_age)
View(count_by_age)
str(count_by_age)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
facet_labs <- c("age:0-14", "age:15-24", "age:25-34", "age:35-44",
"age:45-54", "age:55-64", "age:65+" )
library(viridis)
count_by_age$age_range <- factor(count_by_age$age_range)
facet_labs <- c("age:0-14", "age:15-24", "age:25-34", "age:35-44",
"age:45-54", "age:55-64", "age:65+" )
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range, labeller = labeller(facet_labs)) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range, labeller = labeller(age_range = facet_labs)) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range, labeller = labeller(.age_range = facet_labs)) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
facet_labs <- c("age:0-14", "age:15-24", "age:25-34", "age:35-44",
"age:45-54", "age:55-64", "age:65+" )
names(facet_labs) <- c("0-14", "15-24", "25-34", "35-44",
"45-54", "55-64", "65-Inf")
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range, labeller = labeller(.age_range = facet_labs)) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
filter_df <- filter(who, population !=is.na(population), count !=is.na(count))
print(filter_df)
pct_df <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(ratio_pop = sum(count / population)) %>%
mutate(pct_pop_format = percent(ratio_pop, scale = 100, accuracy = 0.001))
print(pct_df)
count_by_age <- factor(count_by_age$age_range)
count_by_age$age_range <- factor(count_by_age$age_range)
count_by_age$age_range <- factor(count_by_age$age_range)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
remove(count_by_age)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
filter_df <- filter_df %>%
unite(col = 'age_range', 'min_age':'max_age', sep ='-')
tail(filter_df)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
tail(count_by_age)
count_by_age$age_range <- factor(count_by_age$age_range)
count_by_age[count_by_age == "65-Inf"] <- "65+"
count_by_age["age_range"][count_by_age ["age-range"] == "65-Inf"] <- "65+"
count_by_age[age_range][count_by_age [age-range] == "65-Inf"] <- "65+"
count_by_age$age_range[count_by_age$age_range == "65-Inf"] <- "65+"
count_by_age$age_range <- str_replace(count_by_age$age_range == "65-Inf", "65+")
library(stringr)
count_by_age$age_range <- str_replace(count_by_age$age_range == "65-Inf", "65+")
count_by_age$age_range <- str_replace(count_by_age$age_range == "65-Inf", by "65+")
count_by_age$age_range <- str_replace(count_by_age$age_range,"65-Inf", "65+")
View(count_by_age)
filter_df <- filter_df %>%
unite(col = 'age_range', 'min_age':'max_age', sep ='-')
filter_df <- filter(who, population !=is.na(population), count !=is.na(count))
print(filter_df)
pct_df <- filter_df %>%
group_by(year, gender, diagnostic) %>%
summarise(ratio_pop = sum(count / population)) %>%
mutate(pct_pop_format = percent(ratio_pop, scale = 100, accuracy = 0.001))
print(pct_df)
filter_df <- filter_df %>%
unite(col = 'age_range', 'min_age':'max_age', sep ='-')
tail(filter_df)
count_by_age <- filter_df %>%
group_by(age_range) %>%
mutate(pct_diag = count / sum(count) *100)
tail(count_by_age)
library(stringr)
count_by_age$age_range <- str_replace(count_by_age$age_range,"65-Inf", "65+")
tail(count_by_age)
ggplot(count_by_age) +
geom_col(aes(x = diagnostic, y = pct_diag, fill = age_range)) +
labs(x='Diagnostic',
y='Percent of Total',
title='Percent of each age group per diagnostic',
fill = 'Age Range (years old)') +
scale_y_continuous(labels = label_percent(scale = 1)) +   #Format Y label as %
facet_grid(.~age_range) +
theme(plot.title = element_text(hjust=0.5), legend.position = 'bottom',
legend.text = element_text(size = 12)) +
scale_fill_viridis(discrete = TRUE)
