str_split_fixed(string = cust_df, pattern = " ", n=2)
stringr::str_split_fixed(string = cust_df, pattern = " ", n=2)
stringr::str_split_fixed(string = cust_df$sales.Customer.Name, pattern = " ", n=2)
colnames(cust_df, "firstlast")
colnames(cust_df) = "firstlast"
stringr::str_split_fixed(string = cust_df$firstlast, pattern = " ", n=2)
cut_df <- stringr::str_split_fixed(string = cust_df$firstlast, pattern = " ", n=2)
View(cust_df)
cust_df <- stringr::str_split_fixed(string = cust_df$firstlast, pattern = " ", n=2)
remove(cut_df)
colnames(cust_df) = "first", "last"
colnames(cust_df) = c("first", "last")
no_bill <- length("Bill")
length("Bill")
remove(no_bill)
justBill <- regex(cust_df$first = "Bill")
justBill <- cust_df$first = "Bill"
justBill <- cust_df[cust_df$first == "Bill"]
justBill <- cust_df([cust_df$first == "Bill"])
justBill <- cust_df(cust_df$first == "Bill")
justBill <- c(cust_df$first == "Bill")
justBill <- c(cust_df$first = "Bill")
cust_df$first = "Bill"
filter(cust_df, str_detect("Bill", ))
custname_list <- c(cust_df$first)
filter(custname_list, str_detect("Bill", ))
custname_list <- list(cust_df$first)
filter(custname_list, str_detect("Bill"))
filter(custname_list, str_detect("Bill"),)
cust_df <- data.frame(sales$Customer.Name)
colnames(cust_df) = "firstlast"
cust_df <- stringr::str_split_fixed(string = cust_df$firstlast, pattern = " ", n=2)
colnames(cust_df) = c("first", "last")
custname_list <- list(cust_df$first)
custfirst_list <- list(cust_df [1], )
custfirst_list <- list(cust_df [1, ])
remove(custname_list)
View(custfirst_list)
custfirst_list <- list(cust_df ["Bill", ])
remove(custfirst_list)
?filter
cust_bill <- filter(cust_df by = "Bill")
filter(cust_df.data, .by = "Bill")
filter(cust_df, .by = "Bill")
filter(cust_df, by = "Bill")
filter(cust_df, .by = "Bill")
cust_df == "Bill"
filter <- cust_df == "Bill"
custbill <- cust_df == "Bill"
remove(filter)
cust_df <- [custbill, ]
cust_df[custbill, ]
custbill <- cust_df$first == "Bill"
View(cust_df)
cust_df$first == "Bill"
cust_df == "Bill"
cust_df[cust_df$first == "Bill", ]
cust_df[cust_df[first == "Bill"], ]
cust_df[cust_df[first = "Bill"], ]
is.atomic(cust_df)
cust_df[cust_df['Bill'], ]
cust_df[['Bill']]
cust_df[["Bill"]]
cust_df == "Bill"
cust_df == "Bill"
is.atomic(cust_df)
sales <- stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " "
, n=2)
View(sales)
library(stringr)
library(lubridate)
library(forcats)
#Ex1 and 2=========
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
str(sales)
colnames(sales) [1] = "Row.ID"
str(sales)
#Ex3 convert Order.ID and Order.Date to date vectors
str(sales)
is.Date(sales$Order.Date)
sales$Order.Date <- as.Date(sales$Order.Date
,format='%m/%d/%Y'
)
#??? lubridate convert results to year direction not possible with
#just subtraction 2 vectors.  Only can convert to days/wks with "difftime"
oldest_order <- min(sales$Order.Date)
newest_order <- max(sales$Order.Date)
#change unit of difftime to days, weeks (but no years)
day_diff <- difftime(newest_order, oldest_order,
units = "days")
print(day_diff)
#for weeks change unit to weeks
wk_diff <- difftime(newest_order, oldest_order,
units = "weeks")
print(wk_diff)
# For years, redo with interval and divided by yrs
day_intv <- interval(newest_order, oldest_order)
yr_intv <- as.period(day_intv) / years(1)
print(yr_intv)
#If convert to numeric first, that can be done with "duration"
numdays <- as.numeric(newest_order - oldest_order)
numdays
str(numdays)
duration(numdays, "days")
# Ex 4==============
# convert ship date to date category
sales$Ship.Date <- mdy(sales$Ship.Date)
# create a vector from Ship Date and Order Date
ord_date <- sales$Order.Date
shp_date <- sales$Ship.Date
shippingdays <- difftime(shp_date, ord_date,
units = "days")
mean(shippingdays)
stringr::str_split_fixed(string = sales$Customer.Name, pattern = " ", n=2)
View(sales)
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name, pattern = " ", n=2)
View(cust_firstlast)
colnames(cust_firstlast) = c("first", "last")
is.atomic(cust_firstlast)
merge(sales, cust_firstlast)
View(sales)
is.atomic(sales)
sales_merge <- merge(sales, cust_firstlast)
sales_merge
View(sales_merge)
remove(sales_merge)
sales <- cust_firstlast
library(stringr)
library(lubridate)
library(forcats)
#Ex1 and 2=========
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
str(sales)
colnames(sales) [1] = "Row.ID"
str(sales)
#Ex3 convert Order.ID and Order.Date to date vectors
str(sales)
is.Date(sales$Order.Date)
sales$Order.Date <- as.Date(sales$Order.Date
,format='%m/%d/%Y'
)
#??? lubridate convert results to year direction not possible with
#just subtraction 2 vectors.  Only can convert to days/wks with "difftime"
oldest_order <- min(sales$Order.Date)
newest_order <- max(sales$Order.Date)
#change unit of difftime to days, weeks (but no years)
day_diff <- difftime(newest_order, oldest_order,
units = "days")
print(day_diff)
#for weeks change unit to weeks
wk_diff <- difftime(newest_order, oldest_order,
units = "weeks")
print(wk_diff)
# For years, redo with interval and divided by yrs
day_intv <- interval(newest_order, oldest_order)
yr_intv <- as.period(day_intv) / years(1)
print(yr_intv)
#If convert to numeric first, that can be done with "duration"
numdays <- as.numeric(newest_order - oldest_order)
numdays
str(numdays)
duration(numdays, "days")
# Ex 4==============
# convert ship date to date category
sales$Ship.Date <- mdy(sales$Ship.Date)
# create a vector from Ship Date and Order Date
ord_date <- sales$Order.Date
shp_date <- sales$Ship.Date
shippingdays <- difftime(shp_date, ord_date,
units = "days")
mean(shippingdays)
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name, sales$Row.ID
, pattern = " ", n=3)
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=2)
colnames(cust_firstlast) = c("first", "last")
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=2)
cust_firstlast[cust_firstlast$V1 == "Bill"]
cust_firstlast[[cust_firstlast$V1 == "Bill"], ]
cust_firstlast[[cust_firstlast$V1 == "Bill"] ]
colnames(cust_firstlast) = c("first", "last")
justbill <- cust_firstlast$first == "Bill"
cust_firstlast$first == "Bill"
cust_firstlast == "Bill"
length(cust_firstlast == "Bill")
length(cust_firstlast)
length(sales == "Table")
length(sales == "table")
length("table")
length(sales$Sub.Category == "Tables")
View(sales)
length(sales$Sub.Category == Tables)
nrow(sales$Sub.Category == "Tables")
nrow(sales[sales$Sub.Category == "Tables",])
length(sales[sales$Sub.Category == "Table", ])
colnames(sales)
length(sales[sales$Sub.Category == "Table", ] [,1])
nrow(sales[sales$Sub.Category == "Tables",])
length(sales[sales$Sub.Category == "Table", ])
View(cust_firstlast)
sales$first = paste(cust_firstlast$first)
sales$first = paste(cust_firstlast)
View(sales)
length(cust_firstlast)
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=3)
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=1)
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=2)
cust_firstlast2 <- data.frame(stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=2))
cust_firstlast <- data.frame(stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=2))
remove(cust_firstlast2)
View(cust_firstlast)
colnames(cust_firstlast) = c("first", "last")
length(cust_firstlast$first == "Bill")
length(cust_fistlast[cust_firstlast$first == "Bill", ])
length(cust_firstlast[cust_firstlast$first == "Bill", ])
length(cust_firstlast[cust_firstlast$first == "Bill"])
length(cust_firstlast[cust_firstlast$first == "Bill", ])
nrow(cust_firstlast$first == "Bill")
cust_firstlast$first == "Bill", ]
sales_csv <- read.csv("Week_2/Data/sales.csv"
,stringsAsFactors=FALSE
)
temp_char <- stringr::str_split_fixed(string = sales_csv$Product.ID, pattern='-', n=3)
View(sales_csv)
View(temp_char)
length(cust_firstlast[cust_firstlast$first == "Bill", ])
sales$Customer.First <- cust_firstlast[,1]
sales$Customer.Last <- cust_firstlast[,2]
length(sales[sales$Customer.First == "Bill", ])
cust_firstlast <- stringr::str_split_fixed(string = sales$Customer.Name
, pattern = " ", n=2)
colnames(cust_firstlast) = c("first", "last")
sales$Customer.First <- cust_firstlast[,1]
sales$Customer.Last <- cust_firstlast[,2]
remove(temp_char)
length(sales[sales$Customer.First == "Bill", ])
length(cust_firstlast[cust_firstlast == "Bill", ])
length(sales[sales$Customer.First == "Bill", ])
length(sales[sales$Sub.Category == "Table", ])
sales[sales$Customer.First == "Bill", ]
bill_df = sales[sales$Customer.First == "Bill", ]
length(bill_df)
length(bill_df[bill_df])
length(bill_df[bill_df], )
length(sales[sales$Sub.Category == "Table"])
length(bill_df[bill_df])
length(cust_firstlast)
# Subsetting Bill into df
bill_df <- sales[sales$Customer.First == "Bill", ]
# Subsetting Bill into df
bill_df <- sales[sales$Customer.First == "Bill"]
remove(bill_df)
# Subsetting Bill into vector
bill_df <- sales$Customer.First == "Bill"
length(bill_df)
length(bill_df == TRUE)
# Subsetting Bill into vector
bill_df <- sales[sales$Customer.First == "Bill", ]
View(bill_df)
length(bill_df$Customer.First == TRUE)
length(sales[sales$Sub.Category == "Table"])
length(sales[sales$Sub.Category == "Tables"])
length(sales[sales$Sub.Category == "Tables", ])
# Subsetting Bill into vector
bill_df <- sales[sales$Customer.First == "Bill"]
# Subsetting Bill into vector
x <- sales$Customer.First
# Subsetting Bill into vector
firstname <- sales$Customer.First
length(firstname == "Bill")
# Subsetting Bill into vector
firstname <- sales$Customer.First == "Bill"
length(firstname == "Bill")
length(firstname == TRUE)
length(firstname = TRUE)
firstname == TRUE
length(firstname[firstname == TRUE])
length(sales[sales$Sub.Category == "Tables", ])
str_detect(string = sales$Customer.First
, pattern = "Bill")
str_detect(sales$Customer.First == "Bill")
str_detect(sales$Customer.First, "Bill")
bill_vector <- str_detect(sales$Customer.First, "Bill")
length(bill_vector)
length(bill_vector == TRUE)
bill_vector <- str_detect(sales$Customer.First, "Bill", n = 1)
bill_vector <- str_detect(sales$Customer.First, "Bill", n = TRUE)
bill_vector <- str_detect(sales$Customer.First, "Bill", negate = TRUE)
length(bill_vector == TRUE)
bill_vector <- str_detect(sales$Customer.First, "Bill", negate = FALSE)
length(bill_vector[bill_vector == TRUE])
remove(bill_df)
str_count(string = sales$Customer.First, pattern = "Bill")
length(str_count(string = sales$Customer.First, pattern = "Bill"))
length(str_count[string = sales$Customer.First, pattern = "Bill"])
str_count[string = sales$Customer.First, pattern = "Bill"]
str_count([string = sales$Customer.First, pattern = "Bill"])
str_count(string = sales$Customer.First, pattern = "Bill")
str_match(string = sales$Customer.First, pattern = "Bill")
remove(sales_csv)
str_subset(string = sales$Customer.First, pattern = "Bill", negate = FALSE)
bill_vector <- str_subset(string = sales$Customer.First, pattern = "Bill", negate = FALSE)
length(bill_vector)
str_subset(string = sales, pattern = "Tables", negate = FALSE)
str_subset(string = sales$Sub.Category, pattern = "Tables", negate = FALSE)
length(str_subset(string = sales$Sub.Category
, pattern = "Tables"
, negate = FALSE))
unique(sales$State)
sales$State <- factor(sales$State)
is.factor(sales$State)
levels(sales$State)
table(levels(sales$State))
table(sales$State)
level(sales$State)
levels(sales$State)
is.factor(sales$State)
levels(sales$State)
statetable <- table(sales$State)
table(sales$State)
barplot(statetable)
sales_tx_df = sales[sales$State == "Texas", ]
sales$Category <- factor(sales$Category)
sales_tx_df$Category <- factor(sales_tx_df$Category)
levels(sales_tx_df$Category)
barplot(sales_tx_df$Category)
barplot(table(sales_tx_df$Category))
#Ex 9==========================
?aggregate
aggregate(x = sales$Profit, by = sales$Region)
aggregate(x = sales$Profit, by = sales$Region, FUN = "mean")
aggregate(x = sales$Profit, by = Region, FUN = "mean")
aggregate(x = sales$Profit, by = list(sales$Region), FUN = "mean")
# Ex 10======================
order_date = str_split_fixed(string = sales$Order.Date
, pattern = "-", n=3
)
View(order_date)
sales$Order.Year <- order_date [ ,1]
View(sales)
aggregate(x = sales$Profit, by = list(sales$Order.Year), FUN = "mean")
library(stringr)
library(lubridate)
library(forcats)
setwd("..")
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
colnames(sales$X0..Row.ID) == "Row.ID"
colnames(sales$X0..Row.ID) = "Row.ID"
colnames(sales) [1] <- "Row.ID"
colnames(sales)
colnames(sales) [1] <- "Row.ID"
is.Date(sales$Order.Date)
sales$Order.Date <- as.Date(sales$Order.Date
,format='%m/%d/%Y')
sales$Ship.Date <- as.Date(sales$Ship.Date
,format = '%m %d %Y')
sales$Ship.Date <- as.Date(sales$Ship.Date
,format = '%B %d %Y',
)
setwd("..")
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
colnames(sales)
colnames(sales) [1] <- "Row.ID"
colnames(sales)
sales$Order.Date <- as.Date(sales$Order.Date
,format='%m/%d/%Y')
sales$Ship.Date <- as.Date(sales$Ship.Date
,format = '%B %d %Y',
optional = FALSE)
min(sales$Order.Date)
oldest_ord <- min(sales$Order.Date)
recent_ord <- max(sales$Order.Date)
num_orddays <- recent_ord - oldest_ord
num_orddays
difftime(recent_ord, oldest_ord, units = "years")
difftime(recent_ord, oldest_ord, units = "days")
duration(recent_ord, oldest_ord)
dyears(difftime(recent_ord, oldest_ord, units = "days"))
num_orddays <- difftime(recent_ord, oldest_ord, units = "days")
num_orddays
duration(years = num_orddays)
year(num_orddays)
duration(num_orddays, "years")
as.numeric(num_orddays)
duration(num_orddays, "years")
is.numeric(num_orddays)
num_ord_numeric <- as.numeric(num_orddays)
is.numeric(num_orddays)
is.numeric(num_orddays)
is.numeric(num_ord_numeric)
duration(num_orddays, "years")
duration(num_ord_numeric, "years")
duration(num_ord_numeric, "days")
print(num_orddays)
num_orddays <- difftime(recent_ord, oldest_ord, units = "weeks")
num_ordwks <- difftime(recent_ord, oldest_ord, units = "weeks")
print(num_ordwks)
num_ordyrs<- duration(num_ord_numeric, "days")
print(num_orddays)
print(num_ordwks)
print(num_ordyrs)
num_ord_numeric <- as.duration(num_orddays)
print(num_ordyrs)
num_ordyrs <- as.duration(num_orddays)
print(num_orddays)
print(num_ordwks)
print(num_ordyrs)
remove(num_ord_numeric)
library(stringr)
library(lubridate)
library(forcats)
setwd("..")
sales <- read.delim("Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
colnames(sales)
colnames(sales) [1] <- "Row.ID"
colnames(sales) [1] <- "Row.ID"
sales$Order.Date <- as.Date(sales$Order.Date
,format='%m/%d/%Y')
sales$Ship.Date <- as.Date(sales$Ship.Date
,format = '%B %d %Y',
optional = FALSE)
oldest_ord <- min(sales$Order.Date)
recent_ord <- max(sales$Order.Date)
num_orddays <- recent_ord - oldest_ord
num_orddays <- difftime(recent_ord, oldest_ord, units = "days")
num_ordwks <- difftime(recent_ord, oldest_ord, units = "weeks")
num_ordyrs <- as.duration(num_orddays)
print(num_orddays)
print(num_ordwks)
print(num_ordyrs)
mean(sales$Ship.Date - sales$Order.Date)
mean(difftime(sales$Ship.Date, sales$Order.Date
, units = "days"))
print(avg_ship)
avg_ship <- mean(difftime(sales$Ship.Date, sales$Order.Date
, units = "days"))
print(avg_ship)
cust_first_last <- str_split_fixed(string = sales$Customer.Name,
pattern = " ", n = 2)
View(cust_first_last)
bill_only <- str_subset(string = cust_first_last,
pattern = "Bill", negate = FALSE)
bill_only
length(bill_only)
str_subset(sales$Product.Name, pattern = "Tables", negate = FALSE)
length(str_subset(sales$Product.Name, pattern = "Tables", negate = FALSE))
sales$State
unique(sales$State)
factor(sales$State)
sales$State <- factor(sales$State)
sales$State
sales_state_table <- table(sales$State)
print(sales_state_table)
is.factor(sales_state_table)
is.factor(sales$State)
sales$State <- factor(sales$State)
sales_state_table <- table(sales$State)
print(sales_state_table)
barplot(sales$State)
barplot(sales_state_table)
sales_tx_df = sales[sales$State == "Texas", ]
View(sales_tx_df)
barplot(sales_tx_df$Category)
barplot(table(sales_tx_df$Category))
str(sales_tx_df)
View(sales_tx_df)
View(sales_tx_df)
tail(sales_tx_df)
barplot(table(sales_tx_df$Category))
aggregate(x = sales$Profit, by = list(sales$Region), FUN = "mean")
prof_reg <- aggregate(x = sales$Profit, by = list(sales$Region), FUN = "mean")
prof_reg
setNames(prof_reg, c("Region", "Avg.Profit"))
print(prot_reg_rename)
print(prof_reg_rename)
prof_reg <- aggregate(x = sales$Profit, by = list(sales$Region), FUN = "mean")
View(prof_reg)
setNames(prof_reg, c("Region", "Avg.Profit"))
# Your code here
ord_yr <- str_split_fixed(string = sales$Order.Date,
pattern = "-", n=3)
View(ord_yr)
sales$Order.Year <- ord_yr[ , 1]
aggregate(x = sales$Profit, by = sales$Order.Year, FUN = "mean")
aggregate(x = sales$Profit, by = list(sales$Order.Year), FUN = "mean")
prof_yr <- aggregate(x = sales$Profit, by = list(sales$Order.Year), FUN = "mean")
setNames(prof_yr, c("Year", "Avg.Profit"))
View(prof_yr)
View(prof_reg)
colnames(sales)
